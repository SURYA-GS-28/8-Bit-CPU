$date
	Tue Jul 08 20:00:50 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_tb $end
$var wire 1 ! borrowflag $end
$var wire 1 " overflow $end
$var wire 8 # y [7:0] $end
$var reg 8 $ a [7:0] $end
$var reg 8 % b [7:0] $end
$var reg 2 & s [1:0] $end
$scope module alut $end
$var wire 8 ' r0 [7:0] $end
$var wire 8 ( r1 [7:0] $end
$var wire 2 ) sel [1:0] $end
$var reg 1 * borrowflag $end
$var reg 1 + overflow $end
$var reg 8 , r2 [7:0] $end
$var reg 9 - temp [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101000111 -
b1000111 ,
1+
0*
b0 )
b11011101 (
b1101010 '
b0 &
b11011101 %
b1101010 $
b1000111 #
1"
0!
$end
#10
1*
1!
b10001101 ,
b10001101 #
b110001101 -
0+
0"
b1 &
b1 )
#20
b1001000 ,
b1001000 #
0*
0!
b10 &
b10 )
#30
b11111111 ,
b11111111 #
b11 &
b11 )
#40
